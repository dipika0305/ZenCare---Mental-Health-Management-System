/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NurseRole;

import model.EcoSys;
import model.Enterprise.Enterprise;
import model.MailNew;
import model.Organization.OrgNurse;
import model.Room;
import model.UserAccount.UserAccount;
import model.WorkQueue.PatientWorkRequest;
import model.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.DoctorRole.DoctorWorkAreaMainJPanel;

/**
 *
 * @author Mitali
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {
 private JPanel userProcessContainer;
    private EcoSys business;
    private UserAccount userAccount;
    private OrgNurse nurseOrganization;
    private OrgNurse organization;
    private Enterprise enterprise;
    Room sched;
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public NurseWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, OrgNurse organization,Enterprise enterprise, EcoSys business,Room sched) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.organization =organization;
        this.enterprise=enterprise;
        this.sched=sched;
        valueLabel.setText(enterprise.getName());
        populateTables();
           
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)userRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            
            if(request.getType()!=null)
            {
           if(request.getType().equals("Patient") && request.getNurseReciever()!= null && request.getNurseReciever().equals(userAccount))
           {
         
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] =  request.getNurseReciever();
            row[3] = ((PatientWorkRequest) request).getRehabStatus();
            
            
            
            model.addRow(row);
        }
    }
        }
    }
    
    
    
     public void populateTable2(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable2.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            if(request.getType()!=null)
            {
  
           if(request.getType().equals("Patient")&& request.getNurseReciever()== null )
           {
               
            Object[] row = new Object[3];
            row[0] = request;
            row[1] =  request.getNurseReciever();
            row[2] = ((PatientWorkRequest) request).getRehabStatus();
            
            model.addRow(row);
            }
        }
    }
    }
     
     
     private void populateTables(){
         populateTable();
        populateTable2();
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        workRequestJTable2 = new javax.swing.JTable();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        btnBook = new javax.swing.JButton();
        listSched = new java.awt.List();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userRequestJTable.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        userRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                " Patient Name", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userRequestJTable);
        if (userRequestJTable.getColumnModel().getColumnCount() > 0) {
            userRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            userRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            userRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            userRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 450, 96));

        assignJButton.setBackground(new java.awt.Color(0, 153, 153));
        assignJButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("ASSIGN TO ME");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 520, -1, -1));

        processJButton.setBackground(new java.awt.Color(0, 153, 153));
        processJButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 255, 255));
        processJButton.setText("PROCESS");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, 130, -1));

        refreshJButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(0, 153, 153));
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, -1, -1));

        workRequestJTable2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        workRequestJTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(workRequestJTable2);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 400, -1, 100));

        valueLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 150, 30));

        enterpriseLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        enterpriseLabel.setText("Enterprise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, -1, -1));

        btnBook.setBackground(new java.awt.Color(0, 153, 153));
        btnBook.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnBook.setForeground(new java.awt.Color(255, 255, 255));
        btnBook.setText("BOOK");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });
        add(btnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(822, 520, 80, -1));

        listSched.setBackground(new java.awt.Color(255, 255, 255));
        add(listSched, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 190, 80, 310));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
int selectedRow = workRequestJTable2.getSelectedRow();
        btnBook.setVisible(true);
        listSched.setVisible(true);
        if (selectedRow < 0){
             JOptionPane.showMessageDialog(null,"Select a row");
            return;
        }
        for(String s:sched.getRoomDir()){
            listSched.add(s);
        }
        
        
        
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        
        int selectedRow = userRequestJTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"select a row to proceed!!");
            return;
        }
        PatientWorkRequest request = (PatientWorkRequest)userRequestJTable.getValueAt(selectedRow, 0);
        if(request.getNurseReciever()==userAccount){
            request.setRehabStatus("forwarding to caretaker/pharmacist");
            ProcessNurseRequestJPanel processWorkRequestJPanel = new ProcessNurseRequestJPanel(userProcessContainer, request,userAccount,organization, enterprise);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }else if(request.getNurseReciever()!=userAccount){
            JOptionPane.showMessageDialog(null,"Patient assigned to other nurse!!");
                return;
        }else if(request.getNurseReciever()==null){
            JOptionPane.showMessageDialog(null,"Patient not assigned to any Nurse yet!!");
                return;
        }else{
            JOptionPane.showMessageDialog(null,"Error in assigning patient");
                return;
        }
    
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTables();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable2.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Select a appointment");

            //return;
        } else {
            int row=listSched.getSelectedIndex();
            if(row>=0)
            {

                PatientWorkRequest request = (PatientWorkRequest)workRequestJTable2.getValueAt(selectedRow, 0);
                request.setReceiver(userAccount);
                request.setStatus("Pending");
                request.setAppointmentTime(listSched.getSelectedItem());
                try {
                    MailNew m=new MailNew("steveaeddemo@gmail.com","Appointment with doctor: "+ userAccount,"Your appointment is confirmed at "+listSched.getSelectedItem());
                } catch (MessagingException ex) {
                    Logger.getLogger(DoctorWorkAreaMainJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                request.setBillamount("500");
                sched.removerow(listSched.getSelectedItem());
                listSched.remove(listSched.getSelectedItem());
                JOptionPane.showMessageDialog(null,"Booked Successfully!!");

                populateTable();
                populateTable2();
                // btnBook.setVisible(true);
                //listsched.setVisible(true);

            }else
            {
                JOptionPane.showMessageDialog(null,"No appointments!!");
            }
        }

    }//GEN-LAST:event_btnBookActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnBook;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.List listSched;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable userRequestJTable;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable2;
    // End of variables declaration//GEN-END:variables
}
